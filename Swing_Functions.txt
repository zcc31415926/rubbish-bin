JFrame 窗体：
JFrame():构造一个初始时不可见的新窗体。
JFrame(String title):构造一个初始不可见的，具有指定标题的新窗体。
setVisible(boolean b):b为true时显示窗口，否则隐藏窗口。
setTitle(String s):设置窗体的标题。
setSize(int length,int width):设置窗体的显示范围大小。
getContentPane():返回此窗体的content pane。
例:
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		f.setSize(400,200);
	}
}

JLabel 组件：
JLabel():创建无图像无文本的JLabel实例。
JLabel(Icon image):创建具有指定图像的JLabel实例。
JLabel(Icon image,int horizontalAlignment):创建具有指定图像和水平对齐方式的JLabel实例。
JLabel(String text):创建具有指定文本的JLabel实例。
JLabel(String text,Icon icon,int horizontalAlignment):创建具有指定图像、文本和水平对齐方式的JLabel实例。
JLabel(String text,int horizontalAlignment):创建具有指定文本和水平对齐方式的JLabel实例。
setText(String text):设置显示的文本内容。
getText():返回JLabel中的文本内容。
setIcon(Icon icon):设置显示的图像。
getIcon():返回JLabel中的图像。
setAlignment(int alignment):设置JLabel中内容的对齐方式。
getAlignment():返回JLabel中内容的对齐方式。
例:
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel l=new JLabel();
		f.getContentPane().add(l);
		f.setSize(400,200);
	}
}

JTextField 组件：
JTextField():构造一个新的空的JTextField实例。
JTextField(int columns):构造一个具有指定列数的新的空的JTextField实例。
JTextField(String text):构造一个用指定文本初始化的新的JTextField实例。
JTextField(String text,int columns):构造一个用指定文本和列数初始化的新的JTextField实例。
getColumns():返回该JTextField中的列数。
setFont(Font f):设置该JTextField的当前字体。
setHorizontalAlignment(int alignment):设置该JTextField中文本的水平对齐方式。
getText():返回该JTextField中包含的文本。
isEditable():返回该JTextField是否可编辑。
setEditable(boolean b):设置该JTextField是否可编辑。
setText(String t):设置该JTextField中的文本。
例:
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel l=new JLabel();
		JTextField t=new JTextField();
		f.getContentPane().add(l);
		f.getContentPane().add(t);
		f.setSize(400,200);
	}
}

JPanel 组件：
JPanel():创建采用流式布局的新的JPanel实例。
JPanel(LayoutManager layout):创建具有指定布局管理器的新的JPanel实例。
add(JComponent component):将参数中的组件添加到JPanel容器中。
setLayout(LayoutManager layout):为JPanel容器设置布局管理器。
例:
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel l=new JLabel();
		JTextField t=new JTextField();
		JPanel p=new JPanel();
		p.add(l);
		p.add(t);
		f.getContentPane().add(p);
		f.setSize(400,200);
	}
}

JPasswordField 组件：
JPasswordField():构造一个新的空的JPasswordField实例。
JPasswordField(int columns):构造一个具有指定列数的新的空的JPasswordField实例。
getEchoChar():返回要用于回显的字符。
getPassword():返回该JPasswordField中的文本。
setEchoChar(char c):设置该JPasswordField的回显字符。
例:
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel ln=new JLabel();
		JLabel lp=new JLabel();
		JTextField t=new JTextField();
		JPanel p=new JPanel();
		JPasswordField pw=new JPasswordField();
		p.add(ln);
		p.add(lp);
		p.add(t);
		p.add(pw);
		f.getContentPane().add(p);
		f.setSize(400,200);
	}
}

JButton 组件：
JButton():创建一个不带有设置文本或图标的JButton实例。
JButton(Icon icon):建立一个有图像的JButton实例。
JButton(String text):建立一个有文字的JButton实例。
JButton(String text,Icon icon):建立一个有图像和文字的JButton实例。
getIcon():返回按钮的图标。
getText():返回按钮的文本。
setEnabled(boolean b):设置按钮是否被禁用。
setIcon(Icon defaultIcon):设置按钮的图标。
setText(String text):设置按钮的文本。
例：
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel ln=new JLabel();
		JLabel lp=new JLabel();
		JTextField t=new JTextField();
		JPanel p=new JPanel();
		JPasswordField pw=new JPasswordField();
		JButton b=new JButton();
		p.add(ln);
		p.add(lp);
		p.add(t);
		p.add(pw);
		p.add(b);
		f.getContentPane().add(p);
		f.setSize(400,200);
	}
}

JTextArea 组件：
JTextArea():构造一个新的空的JTextArea实例。
JTextArea(int rows,int columns):构造一个具有指定行数和列数的新的空的JTextArea实例。
JTextArea(String text):构造一个用指定文本初始化的新的JTextArea实例。
JTextArea(String text,int rows,int columns):构造一个用指定文本以及行和列初始化的新的JTextArea实例。
append(String text):将给定文本追加到文档末尾。
getColumns():返回该JTextArea的列数。
getLineCount():返回该JTextArea的行数。
setCloumns(int columns):设置该JTextArea的行数。
setRows(int rows):设置该JTextArea的列数。
setWrapStyleWord(boolean word):设置该JTextArea的换行策略。
setLineWrap(boolean b):设置该JTextArea自动换行。
例：
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel l=new JLabel();
		JTextArea t=new JTextArea();
		t.setWrapStyleWord(true);
		f.getContentPane().add(l);
		f.getContentPane().add(t);
		f.setSize(400,200);
	}
}

JComboBox 组件：
JComboBox():创建空的JComboBox实例。
JComboBox(Object[] items):创建包含指定数组中的元素的JComboBox实例。
addItem(Object anObject):返回按钮的图标。
getItemAt(int index):返回指定索引处的列表项。
getItemCount():返回选择框中所有可选项的个数。
getSelectedIndex():返回选择框中与给定项匹配的第一个选项的索引。
getSelectedItem():返回当前所选项。
insertItemAt(Object anObject,int index):在选择框的给定索引处插入新项。
isEditable():返回选择框是否是可编辑的。
removeAllItems():从选择框中移除所有项。
removeItem(Object anObject):从选择框中移除指定项。
removeItemAt(int anIndex):从选择框中移除指定索引对应的项。
setEditable(boolean aFlag):设置选择框是否是可编辑的。
setSelectedIndex(int anIndex):设置选择框中给定索引对应的选项。
setSelectedItem(Object anObject):将选择框显示区域中所选项设置为参数中的对象。
例：
import javax.awt.*;
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel l=new JLabel();
		JComboBox c=new JComboBox();
		layout=new FlowLayout();
		f.setLayout(layout);
		f.getContentPane().add(l);
		f.getContentPane().add(c);
		f.setSize(400,200);
	}
}

JList 组件：
JList():创建空的JList实例。
JList(Object[] items):创建包含指定数组中的元素的JList实例。
getSelectedIndex():返回所选的第一个项的索引。如果没有选择项则返回-1。
getSelectedValue():返回所选的第一个项的值。如果没有选择则返回null。
getSelectionModel():返回列表当前使用的选取模型。
setListData(Object[] listData):使用一个Object数组设置该列表。
setSelectedIndex(int index):设置选中某个具体选项的索引。
setSelectionMode(int selectionMode):设置该列表的选取模式（单项/多项）。
例：
import javax.awt.*;
import javax.swing.*;
public class test
{
	public static void main(String[] args)
	{
		JFrame f=new JFrame();
		JLabel l=new JLabel();
		JList list=new JList();
		layout=new FlowLayout();
		f.setLayout(layout);
		f.getContentPane().add(l);
		f.getContentPane().add(list);
		f.setSize(400,200);
	}
}